{
	"info": {
		"_postman_id": "40d77bbc-dc44-4593-812a-7a304a5bd393",
		"name": "Cart",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45349066",
		"_collection_link": "https://vinayegalapati.postman.co/workspace/OnlineStoreAPI~8fa444e6-560c-40ce-b377-b26f49894e08/collection/45349066-40d77bbc-dc44-4593-812a-7a304a5bd393?action=share&source=collection_link&creator=45349066"
	},
	"item": [
		{
			"name": "Get All Cart Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Defines the JSON schema for the single item in the array response.\r",
							"const singleItem_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Performs schema validation for each item within the returned array.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    // Optimized schema validation: Checks each item in the response array against a single item schema to improve performance for large datasets.\r",
							"    json_response.forEach((item) => {\r",
							"    pm.expect(item).to.be.jsonSchema(singleItem_schema);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Verifies that the entire response is a non-empty JSON array.\r",
							"pm.test(\"Response is an array and not empty\", function(){\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts",
					"host": [
						"{{base_url}}carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Cart Item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Asserts that the response body adheres to the predefined JSON schema.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    pm.expect(json_response).to.be.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"// Verifies that the entire response is a non-empty JSON array.\r",
							"pm.test(\"Response is an array and not empty\", function(){\r",
							"    pm.expect(json_response).to.be.an('object').and.not.be.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Limited Cart Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Defines the JSON schema for the single item in the array response.\r",
							"const singleItem_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Performs schema validation for each item within the returned array.\r",
							"pm.test(\"Expected JSON schema validation\", function(){\r",
							"    // Optimized schema validation: Checks each item in the response array against a single item schema to improve performance for large datasets.\r",
							"    json_response.forEach(function(item) {\r",
							"        pm.expect(item).to.be.jsonSchema(singleItem_schema);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Verifies that the entire response is a non-empty JSON array.\r",
							"pm.test(\"Response is an array and not empty\", function(){\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Asserts that the number of returned Items in the json response is eaual to the given {{limit}} variable.\r",
							"pm.test(\"Length of the json response Items equal to given limit variable\", function(){\r",
							"    const limit = pm.collectionVariables.get(\"limit\");\r",
							"    pm.expect(json_response.length).to.eql(parseInt(limit));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?limit={{limit}}",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "limit",
							"value": "{{limit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Sorted Cart Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Defines the JSON schema for the single item in the array response.\r",
							"const singleItem_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Performs schema validation for each item within the returned array.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    // Optimized schema validation: Checks each item in the response array against a single item schema to improve performance for large datasets.\r",
							"    json_response.forEach((item) => {\r",
							"    pm.expect(item).to.be.jsonSchema(singleItem_schema);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Verifies that the entire response is a non-empty JSON array.\r",
							"pm.test(\"Response is an array and not empty\", function(){\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"// Tests if the first item in the response array is sorted correctly based on the 'sort' collection variable.\r",
							"// If 'sort' is 'asc', the first item's ID should be 1. If 'sort' is 'desc', it should be 7.\r",
							"pm.test(\"validate returned items are in sorted order\", function(){\r",
							"    const sorting_order = pm.collectionVariables.get(\"sort\");\r",
							"    if(sorting_order === 'asc'){ // Use strict equality (===)\r",
							"        pm.expect(json_response[0].id).to.be.eql(1);\r",
							"    } else if (sorting_order === 'desc') { // Added else if for clarity\r",
							"        pm.expect(json_response[0].id).to.be.eql(7);\r",
							"    } else {\r",
							"        // Optional: Add a fail condition or log if 'sort' variable is unexpected\r",
							"        console.warn(\"Sorting order variable 'sort' is neither 'asc' nor 'desc'. Test might not be fully effective.\");\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?sort={{sort}}",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "sort",
							"value": "{{sort}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart Items in Date Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"\r",
							"// Performs schema validation for each item within the returned array.\r",
							"pm.test(\"Expected JSON schema validation\", function(){\r",
							"    pm.expect(json_response).to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"// Verifies that the entire response is a non-empty JSON array.\r",
							"pm.test(\"Response is an array and not empty\", function(){\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"// All cart items fall within the specified date range.\r",
							"pm.test(\"All cart items fall within the hardcoded date range (2020-01-01 to 2020-01-30)\", function () {\r",
							"    const startDate = new Date(\"2020-01-01T00:00:00.000Z\");\r",
							"    const endDate = new Date(\"2020-01-30T23:59:59.999Z\");\r",
							"\r",
							"    json_response.forEach(cart => {\r",
							"        const cartDate = new Date(cart.date);\r",
							"\r",
							"        // Assert that the cart's date is within the specified range\r",
							"        pm.expect(cartDate.getTime()).to.be.at.least(startDate.getTime());\r",
							"        pm.expect(cartDate.getTime()).to.be.at.most(endDate.getTime());\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?startdate=2020-01-01&enddate=2020-01-30",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "startdate",
							"value": "2020-01-01"
						},
						{
							"key": "enddate",
							"value": "2020-01-30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User-Specific Cart Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Asserts that the response body adheres to the predefined JSON schema.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    pm.expect(json_response).to.be.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"// Asserts that the response body is not empty.\r",
							"pm.test(\"Response body is not empty\", () => {\r",
							"    pm.expect(json_response).to.not.be.empty;\r",
							"});\r",
							"\r",
							"//All cart items belong to the specified user.\r",
							"pm.test(\"All cart items belong to the specified user\", () => {\r",
							"    const user_id = pm.collectionVariables.get(\"user_id\");\r",
							"    pm.expect(json_response).to.satisfy((response) => {\r",
							"        return response.every(item => item.userId === parseInt(user_id));\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/user/{{user_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"user",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add to Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Asserts that the response body adheres to the predefined JSON schema.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    pm.expect(json_response).to.be.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"// Asserts that the response body is not empty.\r",
							"pm.test(\"Response body is not empty\", () => {\r",
							"    pm.expect(json_response).to.not.be.empty;\r",
							"});\r",
							"\r",
							"// Returned cart details match the request body.\r",
							"\r",
							"pm.test(\"Cart details match request body\", () => {\r",
							"    const request_body_raw = pm.request.body.raw;\r",
							"    const request_json = JSON.parse(request_body_raw);\r",
							"\r",
							"    pm.expect(json_response.userId).to.equal(request_json.userId);\r",
							"    pm.expect(json_response.date).to.equal(request_json.date);\r",
							"    pm.expect(json_response.products).to.deep.equal(request_json.products);\r",
							"    pm.expect(json_response.userId).to.equal(request_json.userId);\r",
							"\r",
							"    //Validating server-generated fields separately (like 'id')\r",
							"    pm.expect(json_response).to.have.property('id').and.to.be.a('number');\r",
							"    pm.expect(json_response.id).to.be.above(0); // Assuming ID should be a positive number\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{user_id}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{product_id}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts",
					"host": [
						"{{base_url}}carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Asserts that the response body adheres to the predefined JSON schema.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    pm.expect(json_response).to.be.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"// Asserts that the response body is not empty.\r",
							"pm.test(\"Response body is not empty\", () => {\r",
							"    pm.expect(json_response).to.not.be.empty;\r",
							"});\r",
							"\r",
							"// Returned cart details match the request body.\r",
							"\r",
							"pm.test(\"Cart details match request body\", () => {\r",
							"    const request_body_raw = pm.request.body.raw;\r",
							"    const request_json = JSON.parse(request_body_raw);\r",
							"\r",
							"    pm.expect(json_response.userId).to.equal(request_json.userId);\r",
							"    pm.expect(json_response.date).to.equal(request_json.date);\r",
							"    pm.expect(json_response.products).to.deep.equal(request_json.products);\r",
							"    pm.expect(json_response.userId).to.equal(request_json.userId);\r",
							"\r",
							"    //Validating server-generated fields separately (like 'id')\r",
							"    pm.expect(json_response).to.have.property('id').and.to.be.a('number');\r",
							"    pm.expect(json_response.id).to.be.above(0); // Assuming ID should be a positive number\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{user_id}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{product_id}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Update Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Asserts that the response body adheres to the predefined JSON schema.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    pm.expect(json_response).to.be.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"// Asserts that the response body is not empty.\r",
							"pm.test(\"Response body is not empty\", () => {\r",
							"    pm.expect(json_response).to.not.be.empty;\r",
							"});\r",
							"\r",
							"// Returned cart details match the request body.\r",
							"\r",
							"pm.test(\"Cart details match request body\", () => {\r",
							"    const request_body_raw = pm.request.body.raw;\r",
							"    const request_json = JSON.parse(request_body_raw);\r",
							"\r",
							"    pm.expect(json_response.userId).to.equal(request_json.userId);\r",
							"    pm.expect(json_response.date).to.equal(request_json.date);\r",
							"    pm.expect(json_response.products).to.deep.equal(request_json.products);\r",
							"    pm.expect(json_response.userId).to.equal(request_json.userId);\r",
							"\r",
							"    //Validating server-generated fields separately (like 'id')\r",
							"    pm.expect(json_response).to.have.property('id').and.to.be.a('number');\r",
							"    pm.expect(json_response.id).to.be.above(0); // Assuming ID should be a positive number\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{user_id}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{product_id}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parses the JSON response body.\r",
							"const json_response = pm.response.json();\r",
							"\r",
							"// Defines the expected JSON schema for the entire array response.\r",
							"const expected_schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// Asserts that the response body adheres to the predefined JSON schema.\r",
							"pm.test(\"Expected JSON schema validation\", () => {\r",
							"    pm.expect(json_response).to.be.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"// Asserts that the response body is not empty.\r",
							"pm.test(\"Response body is not empty\", () => {\r",
							"    pm.expect(json_response).to.not.be.empty;\r",
							"});\r",
							"\r",
							"// Deleted cart ID matches {{cart_id}}.\r",
							"pm.test(\"Deleted cart ID matches cart_id\", () => {\r",
							"    const requestCartId = pm.collectionVariables.get(\"cart_id\")\r",
							"\r",
							"    pm.expect(json_response.id).to.equal(parseInt(requestCartId));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Verifies that the API response status code is 200 (OK).\r",
					"pm.test(\"successful response validation\", function(){\r",
					"    pm.response.to.have.status(200); \r",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "cart_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "4",
			"type": "string"
		},
		{
			"key": "date",
			"value": "03-02-2020",
			"type": "string"
		},
		{
			"key": "quantity",
			"value": "3",
			"type": "string"
		},
		{
			"key": "limit",
			"value": "4",
			"type": "string"
		},
		{
			"key": "sort",
			"value": "asc",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "5",
			"type": "string"
		}
	]
}